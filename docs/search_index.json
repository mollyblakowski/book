[["index.html", "Contemporary sources of pollution to a growing dust source Chapter 1 Project summary", " Contemporary sources of pollution to a growing dust source Molly Blakowski 2021-03-07 Chapter 1 Project summary Include summary of project here. I will also include pictures of industrial wastewater, dust plumes from mine tailings, and the Kennecott smelter stack. "],["database.html", "Chapter 2 Database", " Chapter 2 Database In this chapter, I describe steps for building my metal_sources database in SQLite. Figure 2.1: Figure illustrating metal_sources database schema. First thing’s first: I need to install the packages RSQLite and DBI, load them, and establish a database connection. # install packages install.packages(&quot;RSQLite&quot;) install.packages(&quot;DBI&quot;) # load DBI package library(DBI) # establish database connection metal_sources_db &lt;- dbConnect(drv = RSQLite::SQLite(), &quot;/Users/mollyblakowski/Documents/professional/PhD/research/metal_sources/data/metal_sources.db&quot;) My database has 8 tables. The first tables I need to create are sites and projects because they don’t have foreign keys. These two tables house data associated with where samples were collected and with what project they are associated - specifically, is the data from my project, a collaborator’s project, or a project from the literature. # create sites and projects tables dbExecute(metal_sources_db, &quot;CREATE TABLE sites ( site_id char(3) NOT NULL PRIMARY KEY, site_name varchar(50), latitude double, longitude double );&quot;) dbExecute(metal_sources_db, &quot;CREATE TABLE projects ( project_id char(3) NOT NULL PRIMARY KEY, contact_first varchar(50), contact_last varchar(50), doi varchar(50) );&quot;) Next, I can create the collections table, which stores information about when sample bottles were deployed and collected from sites. The reason this goes next is that I can’t make the samples table without it. # create collections table dbExecute(metal_sources_db, &quot;CREATE TABLE collections ( collection_id INTEGER PRIMARY KEY, deploy_date text, collect_date text, period_id varchar(20), site_id char(3), FOREIGN KEY (site_id) REFERENCES sites(site_id) );&quot;) The samples table contains information on the sample mass and the dimensions of the sampler that are needed to calculate flux. It is connected to collections and sites via collection_id, as as well to projects via project_id. # create samples table dbExecute(metal_sources_db, &quot;CREATE TABLE samples ( sample_id INTEGER PRIMARY KEY, collection_id varchar(5), mass_g float, inlet_area_cm2 float, inlet_area_m2 float, project_id char(3), FOREIGN KEY (collection_id) REFERENCES collections(collection_id), FOREIGN KEY (project_id) REFERENCES projects(project_id) );&quot;) The remaining tables are here to store results from my work in the lab. # create grain_size table dbExecute(metal_sources_db, &quot;CREATE TABLE grain_size ( grain_size_id INTEGER PRIMARY KEY AUTOINCREMENT, sample_id varchar(5), median_grain_size_um float, mean_grain_size_um float, min_size_um float, max_size_um float, FOREIGN KEY (sample_id) REFERENCES samples(sample_id) );&quot;) # create isotopes table dbExecute(metal_sources_db, &quot;CREATE TABLE isotopes ( isotopes_id INTEGER PRIMARY KEY AUTOINCREMENT, sample_id varchar(5), epsilon_tl float, epsilon_tl_error float, FOREIGN KEY (sample_id) REFERENCES samples(sample_id) );&quot;) # create minerals table dbExecute(metal_sources_db, &quot;CREATE TABLE minerals ( minerals_id INTEGER PRIMARY KEY AUTOINCREMENT, sample_id varchar(5), quartz_percent float, calcite_percent float, halite_percent float, chlorite_percent float, kaolinite_percent float, aragonite_percent float, andesine_percent float, bytownite_percent float, dolomite_percent float, gypsum_percent float, illite_percent float, oligoclase_percent float, plagioclase_percent float, FOREIGN KEY (sample_id) REFERENCES samples(sample_id) );&quot;) # create elements table dbExecute(metal_sources_db, &quot;CREATE TABLE elements ( elements_id INTEGER PRIMARY KEY AUTOINCREMENT, sample_id varchar(5), as_ppm float, cd_ppm float, co_ppm float, cr_ppm float, cu_ppm float, pb_ppm float, tl_ppm float, zr_ppm float, FOREIGN KEY (sample_id) REFERENCES samples(sample_id) );&quot;) Wow, I made a lot of typos while setting this up. But I’m done! Well, I still need to import my data into these tables, and after I do that, I also need to create temp tables for the results tables as per the directions in our course materials. I would really appreciate your feedback on my progress before I move on to those next steps, Simona. Thank you! This is really cool! "],["references.html", "References", " References "]]
